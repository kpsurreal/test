{"version":3,"sources":["common/risk_controller.js"],"names":["RiskController","rulesData","getRulesData","ids","callback","$","ajax","url","window","REQUEST_PREFIX","type","data","product_id","success","res","Object","prototype","toString","call","error","stockPoolData","stockPoolList","getStockPoolData","code","keys","forEach","e","el","id","list","push","pool_id","join","feeData","getFeeData","omsAlert","msg","failNotice","checkFee","stock_code","balance","price","riskRules","doCheckFee","calFeeTotal","volume","checkRules","stockInfo","rtn","localStorage","getItem","num","Infinity","dstNum","freeNum","length","rules","assign","Number","trade_direction","checkBuyRules","checkSellRules","getTargetStatus","customPool","target","independentTargetCheck","getStatus","getPositionInfo","rulesInfo","wholePosition","independentWholePositionCheck","getMaxCash","checkBalanceIndependent","checkWholePositionIndependent","checkOnePositionIndependent","checkTargetIndependent","checkPlacardsIndependent","checkControTradeIndependent","checkPlacardsUnion","checkControTradeUnion","calcRtn","checkCanSellVolumeIndependent","trade_mode","surged_limit","stock","trading_unit","enable_cash","rtnArr","independentBalanceCheck","check","total_assets","security","net_value","stock_name","market_value","onePosition","independentOnePositionCheck","checkTimeArea","time_h","moment","hours","timeAreaCheck","enable_sell_volume","independentCanSellVolumeCheck","stock_position_num","stock_entrust_num","stock_total_share","placards","independentPlacardsCheck","stock_entrust_buy_num","stock_entrust_sell_num","controTrade","independentControTradeCheck","stock_all_position_num","stock_all_entrust_num","placardsCo","unionPlacardsCheck","stock_all_entrust_buy_num","stock_all_entrust_sell_num","controTradeCo","unionControTradeCheck","obj","tmpArr","limitAction","ruleType","max_cash","Math","min","actionList","riskCheck"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,cAAT,GAAyB;AACvB,MAAIC,YAAY,EAAhB;AACA,OAAKC,YAAL,GAAoB,UAASC,GAAT,EAAcC,QAAd,EAAuB;AACzC;AACAC,MAAEC,IAAF,CAAO;AACL;AACAC,WAAKC,OAAOC,cAAP,GAAwB,wBAFxB;AAGLC,YAAM,KAHD;AAILC,YAAM;AACJC,oBAAYT;AADR,OAJD;AAOLU,eAAS,iBAASC,GAAT,EAAa;AACpB,YAAIA,IAAIH,IAAR,EAAc;AAAC;AACb;AACA;AACAV,sBAAYa,IAAIH,IAAhB;AACA,cAAII,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bd,QAA/B,MAA6C,mBAAjD,EAAsE;AACpEA,qBAASc,IAAT;AACD;AACF,SAPD,MAOK;AACH;AACD;AACF,OAlBI;AAmBLC,aAAO,iBAAU;AACf;AACD;AArBI,KAAP;AAuBD,GAzBD;;AA2BA,MAAIC,aAAJ;AACA,MAAIC,aAAJ;AACA,OAAKC,gBAAL,GAAwB,UAASlB,QAAT,EAAkB;AACxCC,MAAEC,IAAF,CAAO;AACLC,WAAK,8BADA;AAELG,YAAM,KAFD;AAGLG,eAAS,iBAASC,GAAT,EAAa;AACpB,YAAI,KAAKA,IAAIS,IAAb,EAAmB;AACjB;AACA;AACA;AACAH,0BAAgBN,IAAIH,IAApB;AACAU,2BAAiBN,OAAOS,IAAP,CAAYH,aAAZ,EAA2BI,OAA3B,CAAmC,UAASC,CAAT,EAAW;AAC7DN,0BAAcK,OAAd,CAAsB,UAASE,EAAT,EAAY;AAChC,kBAAIA,GAAGC,EAAH,IAASF,CAAb,EAAgB;AACdC,mBAAGE,IAAH,GAAUR,cAAcK,CAAd,CAAV;AACD;AACF,aAJD;AAKD,WANgB,CAAjB;AAOA,cAAIvB,MAAM,EAAV;AACAW,cAAIH,IAAJ,CAASc,OAAT,CAAiB,UAASC,CAAT,EAAW;AAC1BvB,gBAAI2B,IAAJ,CAASJ,EAAEE,EAAX;AACD,WAFD;AAGAvB,YAAEC,IAAF,CAAO;AACLC,iBAAK,oCADA;AAELG,kBAAM,KAFD;AAGLC,kBAAM;AACJoB,uBAAS5B,IAAI6B,IAAJ,CAAS,GAAT;AADL,aAHD;AAMLnB,qBAAS,iBAASC,GAAT,EAAa;AACpB,kBAAI,KAAKA,IAAIS,IAAb,EAAmB;AACjBF,gCAAgBP,IAAIH,IAApB;AACAI,uBAAOS,IAAP,CAAYH,aAAZ,EAA2BI,OAA3B,CAAmC,UAASC,CAAT,EAAW;AAC5CN,gCAAcK,OAAd,CAAsB,UAASE,EAAT,EAAY;AAChC,wBAAIA,GAAGC,EAAH,IAASF,CAAb,EAAgB;AACdC,yBAAGE,IAAH,GAAUR,cAAcK,CAAd,CAAV;AACD;AACF,mBAJD;AAKD,iBAND;AAOA,oBAAIX,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bd,QAA/B,MAA6C,mBAAjD,EAAsE;AACpEA,2BAASc,IAAT;AACD;AACF,eAZD,MAYK;AACH;AACD;AACF,aAtBI;AAuBLC,mBAAO,iBAAU;AACf;AACD;AAzBI,WAAP;AA4BD,SA5CD,MA4CK;AACH;AACD;AACF,OAnDI;AAoDLA,aAAO,iBAAU,CAEhB;AAtDI,KAAP;AAwDD,GAzDD;;AA2DA,MAAIc,OAAJ;AACA,OAAKC,UAAL,GAAkB,UAAS/B,GAAT,EAAcC,QAAd,EAAuB;AACvCC,MAAEC,IAAF,CAAO;AACLC,WAAKC,OAAOC,cAAP,GAAwB,2BADxB;AAELE,YAAM;AACJC,oBAAYT,IAAI6B,IAAJ,CAAS,GAAT;AADR,OAFD;AAKLnB,eAAS,iBAASC,GAAT,EAAa;AACpB,YAAI,KAAKA,IAAIS,IAAb,EAAmB;AACjBU,oBAAUnB,IAAIH,IAAd;AACD,SAFD,MAEK;AACHN,YAAE8B,QAAF,CAAWrB,IAAIsB,GAAf;AACD;AACD,YAAIrB,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bd,QAA/B,MAA6C,mBAAjD,EAAsE;AACpEA,mBAASc,IAAT;AACD;AACF,OAdI;AAeLC,aAAO,iBAAU;AACfd,UAAEgC,UAAF;AACD;AAjBI,KAAP;AAmBD,GApBD;AAqBA;AACA;AACA;;AAEA,OAAKC,QAAL,GAAgB,UAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqC7B,UAArC,EAAgD;;AAE9D,WAAO8B,UAAUC,UAAV,CAAqBJ,UAArB,EAAiCC,OAAjC,EAA0CC,KAA1C,EAAiDR,QAAQrB,UAAR,CAAjD,CAAP;AACD,GAHD;;AAKA,OAAKgC,WAAL,GAAmB,UAASL,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqC7B,UAArC,EAAiDiC,MAAjD,EAAwD;AACzE,WAAOH,UAAUE,WAAV,CAAsBL,UAAtB,EAAkCC,OAAlC,EAA2CC,KAA3C,EAAkDR,QAAQrB,UAAR,CAAlD,EAAuEiC,MAAvE,CAAP;AACD,GAFD;;AAIA;AACA;AACA,OAAKC,UAAL,GAAkB,UAASC,SAAT,EAAmB;AACnC,QAAIC,MAAM,EAAV;AACA;AACA,QAAIC,aAAaC,OAAb,CAAqB,uBAArB,CAAJ,EAAmD;AAC/C,aAAO;AACP3B,cAAM,CADC;AAEPa,aAAK,MAFE;AAGPe,aAAKC,QAHE;AAIPC,gBAAQN,UAAUF,MAJX;AAKPS,iBAASF;AALF,OAAP;AAOH;;AAED;AACA,QAAIrC,OAAOS,IAAP,CAAYvB,SAAZ,EAAuBsD,MAAvB,IAAiC,CAArC,EAAwC;AACtCP,YAAM;AACJzB,cAAM,KADF;AAEJa,aAAK,UAFD;AAGJe,aAAK;AAHD,OAAN;AAKA,aAAOH,GAAP;AACD;;AAED;AACA,QAAIQ,QAAQ,EAAZ;AACAA,UAAMjC,IAAN,GAAatB,UAAU8C,UAAUnC,UAApB,EAAgCW,IAA7C;AACAiC,UAAMpB,GAAN,GAAYnC,UAAU8C,UAAUnC,UAApB,EAAgCwB,GAA5C;AACAoB,UAAM7C,IAAN,GAAa,EAAb;AACA6C,UAAM7C,IAAN,CAAW6C,KAAX,GAAmBzC,OAAO0C,MAAP,CAAc,EAAd,EAAkBxD,UAAU8C,UAAUnC,UAApB,EAAgCD,IAAhC,CAAqC6C,KAAvD,EAA8DvD,UAAU,CAAC,CAAX,EAAcU,IAAd,CAAmB6C,KAAjF,CAAnB;;AAEA,QAAIE,OAAOX,UAAUY,eAAjB,KAAqC,CAAzC,EAA4C;AAC1C;AACAX,YAAM,KAAKY,aAAL,CAAmBb,SAAnB,EAA8BS,KAA9B,CAAN;AACD,KAHD,MAGM,IAAIE,OAAOX,UAAUY,eAAjB,KAAqC,CAAzC,EAA4C;AAChD;AACAX,YAAM,KAAKa,cAAL,CAAoBd,SAApB,EAA+BS,KAA/B,CAAN;AACD,KAHK,MAGD;AACHR,YAAM;AACJzB,cAAM,KADF;AAEJa,aAAK,UAFD;AAGJe,aAAK;AAHD,OAAN;AAKD;;AAED,WAAOH,GAAP;AACD,GA7CD;AA8CA;AACA;AACA;AACA,OAAKc,eAAL,GAAuB,UAASf,SAAT,EAAmB;AACxC;AACA,QAAIhC,OAAOS,IAAP,CAAYvB,SAAZ,EAAuBsD,MAAvB,IAAiC,CAArC,EAAwC;AACtC,aAAO,KAAP;AACD;;AAED,QAAIC,QAAQ;AACVO,kBAAY3C,aADF;AAEV4C,cAAQ/D,UAAU8C,UAAUnC,UAApB,EAAgCD,IAAhC,CAAqC6C,KAArC,CAA2C,QAA3C;AAFE,KAAZ;AAIA,QAAIR,MAAMiB,uBAAuBC,SAAvB,CAAiCnB,SAAjC,EAA4CS,KAA5C,CAAV;AACA,WAAOR,GAAP;AACD,GAZD;AAaA;AACA,OAAKmB,eAAL,GAAuB,UAASpB,SAAT,EAAoBqB,SAApB,EAA8B;AACnD;AACA,QAAIrD,OAAOS,IAAP,CAAYvB,SAAZ,EAAuBsD,MAAvB,IAAiC,CAArC,EAAwC;AACtC,aAAO,KAAP;AACD;;AAED,QAAIC,QAAQ;AACVa,qBAAepE,UAAU8C,UAAUnC,UAApB,EAAgCD,IAAhC,CAAqC6C,KAArC,CAA2C,eAA3C;AADL,KAAZ;AAGA,QAAIR,MAAMsB,8BAA8BH,eAA9B,CAA8CpB,SAA9C,EAAyDS,KAAzD,CAAV;AACA,WAAOR,GAAP;AACD,GAXD;AAYA;AACA;AACA,OAAKuB,UAAL,GAAkB,UAASxB,SAAT,EAAmB;AACnC;AACA,QAAIhC,OAAOS,IAAP,CAAYvB,SAAZ,EAAuBsD,MAAvB,IAAiC,CAArC,EAAwC;AACtC,aAAO,CAAP;AACD;AACD,QAAIC,QAAQ;AACVa,qBAAepE,UAAU8C,UAAUnC,UAApB,EAAgCD,IAAhC,CAAqC6C,KAArC,CAA2C,eAA3C;AADL,KAAZ;AAGA,QAAIR,MAAMsB,8BAA8BC,UAA9B,CAAyCxB,SAAzC,EAAoDS,KAApD,CAAV;AACA,WAAOR,GAAP;AACD,GAVD;AAWA;AACA;AACA,OAAKY,aAAL,GAAqB,UAASb,SAAT,EAAoBqB,SAApB,EAA8B;AACjD,QAAIpB,MAAM,EAAV;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKwB,uBAAL,CAA6BzB,SAA7B,EAAwCqB,SAAxC,EAAmD3C,OAAnD,CAA2D,UAASC,CAAT,EAAW;AACpEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;AAGA,SAAK+C,6BAAL,CAAmC1B,SAAnC,EAA8CqB,SAA9C,EAAyD3C,OAAzD,CAAiE,UAASC,CAAT,EAAW;AAC1EsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;AAGA,SAAKgD,2BAAL,CAAiC3B,SAAjC,EAA4CqB,SAA5C,EAAuD3C,OAAvD,CAA+D,UAASC,CAAT,EAAW;AACxEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;AAGA,SAAKiD,sBAAL,CAA4B5B,SAA5B,EAAuCqB,SAAvC,EAAkD3C,OAAlD,CAA0D,UAASC,CAAT,EAAW;AACnEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKkD,wBAAL,CAA8B7B,SAA9B,EAAyCqB,SAAzC,EAAoD3C,OAApD,CAA4D,UAASC,CAAT,EAAW;AACrEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKmD,2BAAL,CAAiC9B,SAAjC,EAA4CqB,SAA5C,EAAuD3C,OAAvD,CAA+D,UAASC,CAAT,EAAW;AACxEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKoD,kBAAL,CAAwB/B,SAAxB,EAAmCqB,SAAnC,EAA8C3C,OAA9C,CAAsD,UAASC,CAAT,EAAW;AAC/DsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKqD,qBAAL,CAA2BhC,SAA3B,EAAsCqB,SAAtC,EAAiD3C,OAAjD,CAAyD,UAASC,CAAT,EAAW;AAClEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA,WAAO,KAAKsD,OAAL,CAAahC,GAAb,CAAP;AACD,GA1CD;AA2CA,OAAKa,cAAL,GAAsB,UAASd,SAAT,EAAoBqB,SAApB,EAA8B;AAClD,QAAIpB,MAAM,EAAV;AACA;;AAEA,SAAKiC,6BAAL,CAAmClC,SAAnC,EAA8CqB,SAA9C,EAAyD3C,OAAzD,CAAiE,UAASC,CAAT,EAAW;AAC1EsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKmD,2BAAL,CAAiC9B,SAAjC,EAA4CqB,SAA5C,EAAuD3C,OAAvD,CAA+D,UAASC,CAAT,EAAW;AACxEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA;AACA,SAAKqD,qBAAL,CAA2BhC,SAA3B,EAAsCqB,SAAtC,EAAiD3C,OAAjD,CAAyD,UAASC,CAAT,EAAW;AAClEsB,UAAIlB,IAAJ,CAASJ,CAAT;AACD,KAFD;;AAIA,WAAO,KAAKsD,OAAL,CAAahC,GAAb,CAAP;AACD,GAnBD;;AAqBA,OAAKwB,uBAAL,GAA+B,UAASzB,SAAT,EAAoBqB,SAApB,EAA8B;AAC3D;AACA,QAAI3B,QAAQW,QAAZ;AACA,QAAI,KAAKM,OAAOX,UAAUmC,UAAjB,CAAT,EAAuC;AACrCzC,cAAQM,UAAUN,KAAlB;AACD,KAFD,MAEM,IAAG,KAAKiB,OAAOX,UAAUmC,UAAjB,CAAR,EAAqC;AACzCzC,cAAQM,UAAUoC,YAAlB,CADyC,CACH;AACvC;;AAED,QAAIC,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVzE,kBAAYmC,UAAUnC,UAFZ;AAGV2B,kBAAYQ,UAAUR,UAHZ,EAG4B;AACtCC,eAASO,UAAUuC,WAJT,EAI4B;AACtC7C,aAAOA,KALG,EAK4B;AACtCY,cAAQN,UAAUF,MANR,CAM4B;AAN5B,KAAZ;;AASA,QAAIW,QAAQ;AACV;AACAvB,eAASA,QAAQc,UAAUnC,UAAlB;AAFC,KAAZ;;AAKA,QAAI2E,SAASC,wBAAwBC,KAAxB,CAA8BL,KAA9B,EAAqC5B,KAArC,CAAb;;AAEA;AACA;AACA;AACA;;AAEA,WAAO+B,MAAP;AACD,GA/BD;AAgCA,OAAKd,6BAAL,GAAqC,UAAS1B,SAAT,EAAoBqB,SAApB,EAA8B;AACjE;AACA,QAAI3B,QAAQW,QAAZ;AACA,QAAI,KAAKM,OAAOX,UAAUmC,UAAjB,CAAT,EAAuC;AACrCzC,cAAQM,UAAUN,KAAlB;AACD,KAFD,MAEM,IAAG,KAAKiB,OAAOX,UAAUmC,UAAjB,CAAR,EAAqC;AACzCzC,cAAQM,UAAUoC,YAAlB,CADyC,CACH;AACvC;;AAED,QAAIC,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVK,oBAAc3C,UAAU2C,YAFd,EAE4B;AACtCnD,kBAAYQ,UAAUR,UAHZ,EAG4B;AACtCE,aAAOA,KAJG,EAI4B;AACtCY,cAAQN,UAAUF,MALR,EAK4B;AACtC8C,gBAAU5C,UAAU4C,QANV,EAM4B;AACtCC,iBAAW7C,UAAU6C,SAPX,CAO4B;AAP5B,KAAZ;;AAUA,QAAIpC,QAAQ;AACVvB,eAASA,QAAQc,UAAUnC,UAAlB,CADC,EAC8B;AACxCyD,qBAAeD,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,eAArB;AAFL,KAAZ;AAIA,QAAI+B,SAASjB,8BAA8BmB,KAA9B,CAAoCL,KAApC,EAA2C5B,KAA3C,CAAb;;AAEA;AACA;AACA;AACA;;AAEA,WAAO+B,MAAP;AACD,GA/BD;AAgCA,OAAKb,2BAAL,GAAmC,UAAS3B,SAAT,EAAoBqB,SAApB,EAA8B;AAC/D;AACA,QAAI3B,QAAQW,QAAZ;AACA,QAAI,KAAKM,OAAOX,UAAUmC,UAAjB,CAAT,EAAuC;AACrCzC,cAAQM,UAAUN,KAAlB;AACD,KAFD,MAEM,IAAG,KAAKiB,OAAOX,UAAUmC,UAAjB,CAAR,EAAqC;AACzCzC,cAAQM,UAAUoC,YAAlB,CADyC,CACH;AACvC;;AAED,QAAIC,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVQ,kBAAY9C,UAAU8C,UAFZ,EAE4B;AACtCtD,kBAAYQ,UAAUR,UAHZ,EAG4B;AACtCmD,oBAAc3C,UAAU2C,YAJd,EAI4B;AACtCjD,aAAOA,KALG,EAK4B;AACtCY,cAAQN,UAAUF,MANR,EAM4B;AACtCiD,oBAAc/C,UAAU+C,YAPd,CAO4B;AAP5B,KAAZ;;AAUA,QAAItC,QAAQ;AACVO,kBAAY3C,aADF;AAEVa,eAASA,QAAQc,UAAUnC,UAAlB,CAFC,EAE8B;AACxCmF,mBAAa3B,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,aAArB;AAHH,KAAZ;AAKA,QAAI+B,SAASS,4BAA4BP,KAA5B,CAAkCL,KAAlC,EAAyC5B,KAAzC,CAAb;;AAEA;AACA;AACA;AACA;;AAEA,WAAO+B,MAAP;AACD,GAhCD;AAiCA,OAAKZ,sBAAL,GAA8B,UAAS5B,SAAT,EAAoBqB,SAApB,EAA8B;AAC1D;AACA,QAAIgB,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVhC,cAAQN,UAAUF,MAFR,EAE4B;AACtCgD,kBAAY9C,UAAU8C,UAHZ,EAG4B;AACtCtD,kBAAYQ,UAAUR,UAJZ,CAI4B;AAJ5B,KAAZ;AAMA,QAAIiB,QAAQ;AACVO,kBAAY3C,aADF;AAEV4C,cAAQI,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,QAArB;AAFE,KAAZ;AAIA,QAAI+B,SAAStB,uBAAuBwB,KAAvB,CAA6BL,KAA7B,EAAoC5B,KAApC,CAAb;AACA,WAAO+B,MAAP;AACD,GAdD;AAeA,OAAKU,aAAL,GAAqB,UAASlD,SAAT,EAAoBqB,SAApB,EAA8B;AACjD;AACA,QAAIgB,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVhC,cAAQN,UAAUF,MAFR,EAE4B;AACtC;AACAqD,cAAQC,SAASC,KAAT;AAJE,KAAZ;AAMA,QAAI5C,QAAQ;AACV;AADU,KAAZ;AAGA,QAAI+B,SAASc,cAAcZ,KAAd,CAAoBL,KAApB,EAA2B5B,KAA3B,CAAb;AACA,WAAO+B,MAAP;AACD,GAbD;AAcA,OAAKN,6BAAL,GAAqC,UAASlC,SAAT,EAAoBqB,SAApB,EAA8B;AACjE;AACA,QAAIgB,QAAQ;AACVC,oBAActC,UAAUsC,YADd;AAEVhC,cAAQN,UAAUF,MAFR,EAEwC;AAClDyD,0BAAoBvD,UAAUuD,kBAHpB,CAGwC;AAHxC,KAAZ;AAKA,QAAI9C,QAAQ;AACV;AADU,KAAZ;AAGA,QAAI+B,SAASgB,8BAA8Bd,KAA9B,CAAoCL,KAApC,EAA2C5B,KAA3C,CAAb;AACA,WAAO+B,MAAP;AACD,GAZD;AAaA;AACA,OAAKX,wBAAL,GAAgC,UAAS7B,SAAT,EAAoBqB,SAApB,EAA8B;AAC5D;AACA,QAAIgB,QAAQ;AACV;AACA7C,kBAAYQ,UAAUR,UAFZ;AAGVc,cAAQN,UAAUF,MAHR;AAIV2D,0BAAoBzD,UAAUyD,kBAJpB;AAKVC,yBAAmB1D,UAAU0D,iBALnB;AAMVC,yBAAmB3D,UAAU2D;AANnB,KAAZ;AAQA,QAAIlD,QAAQ;AACVmD,gBAAUvC,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,UAArB;AADA,KAAZ;AAGA,QAAI+B,SAASqB,yBAAyBnB,KAAzB,CAA+BL,KAA/B,EAAsC5B,KAAtC,CAAb;AACA,WAAO+B,MAAP;AACD,GAfD;AAgBA;AACA,OAAKV,2BAAL,GAAmC,UAAS9B,SAAT,EAAoBqB,SAApB,EAA8B;AAC/D,QAAIgB,QAAQ;AACVzB,uBAAiBZ,UAAUY,eADjB;AAEVN,cAAQN,UAAUF,MAFR;AAGVgE,6BAAuB9D,UAAU8D,qBAHvB;AAIVC,8BAAwB/D,UAAU+D;AAJxB,KAAZ;AAMA,QAAItD,QAAQ;AACVuD,mBAAa3C,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,aAArB;AADH,KAAZ;AAGA,QAAI+B,SAASyB,4BAA4BvB,KAA5B,CAAkCL,KAAlC,EAAyC5B,KAAzC,CAAb;AACA,WAAO+B,MAAP;AACD,GAZD;AAaA;AACA,OAAKT,kBAAL,GAA0B,UAAS/B,SAAT,EAAoBqB,SAApB,EAA8B;AACtD,QAAIgB,QAAQ;AACV7C,kBAAYQ,UAAUR,UADZ;AAEVc,cAAQN,UAAUF,MAFR;AAGVoE,8BAAwBlE,UAAUkE,sBAHxB;AAIVC,6BAAuBnE,UAAUmE,qBAJvB;AAKVR,yBAAmB3D,UAAU2D;AALnB,KAAZ;AAOA,QAAIlD,QAAQ;AACV2D,kBAAY/C,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,YAArB;AADF,KAAZ;AAGA,QAAI+B,SAAS6B,mBAAmB3B,KAAnB,CAAyBL,KAAzB,EAAgC5B,KAAhC,CAAb;AACA,WAAO+B,MAAP;AACD,GAbD;AAcA;AACA,OAAKR,qBAAL,GAA6B,UAAShC,SAAT,EAAoBqB,SAApB,EAA8B;AACzD,QAAIgB,QAAQ;AACVzB,uBAAiBZ,UAAUY,eADjB;AAEVN,cAAQN,UAAUF,MAFR;AAGVwE,iCAA2BtE,UAAUsE,yBAH3B;AAIVC,kCAA4BvE,UAAUuE;AAJ5B,KAAZ;AAMA,QAAI9D,QAAQ;AACV+D,qBAAenD,UAAUzD,IAAV,CAAe6C,KAAf,CAAqB,eAArB;AADL,KAAZ;AAGA,QAAI+B,SAASiC,sBAAsB/B,KAAtB,CAA4BL,KAA5B,EAAmC5B,KAAnC,CAAb;AACA,WAAO+B,MAAP;AACD,GAZD;;AAcA;AACA;AACA;AACA;AACA;AACA,OAAKP,OAAL,GAAe,UAASyC,GAAT,EAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIC,SAAS,CAAC;AACZC,mBAAa;AADD,KAAD,EAEV;AACDA,mBAAa;AADZ,KAFU,CAAb;AAKAD,WAAOjG,OAAP,CAAe,cAAM;AACnB,UAAI6B,UAAUF,QAAd;AACA,UAAID,MAAMC,QAAV;AACA,UAAIC,SAAS,EAAb;AACA,UAAIsE,cAAchG,GAAGgG,WAArB;AACA,UAAIvF,MAAM,EAAV;AACA,UAAIwF,WAAW,EAAf;AACA,UAAIrG,OAAO,EAAX;AACA,UAAIsG,WAAWzE,QAAf;;AAEAqE,UAAIhG,OAAJ,CAAY,UAASC,CAAT,EAAW;AACrB;AACA,YAAIA,EAAE4B,OAAF,IAAaA,OAAb,IAAwB5B,EAAEiG,WAAF,IAAiBhG,GAAGgG,WAAhD,EAA6D;AAC3DxE,gBAAMzB,EAAEyB,GAAR;AACAG,oBAAUwE,KAAKC,GAAL,CAASrG,EAAE4B,OAAX,EAAoBA,OAApB,CAAV;AACAuE,qBAAWC,KAAKC,GAAL,CAASrG,EAAEmG,QAAX,EAAqBA,QAArB,CAAX;AACAxE,mBAAS3B,EAAE2B,MAAX;AACAsE,wBAAcjG,EAAEiG,WAAhB;AACAvF,gBAAMV,EAAEU,GAAR;AACAwF,qBAAWlG,EAAEkG,QAAb;AACArG,iBAAOG,EAAEH,IAAT;AACD;AACF,OAZD;;AAcAI,SAAGJ,IAAH,GAAUA,IAAV;AACAI,SAAGwB,GAAH,GAASA,GAAT;AACAxB,SAAGkG,QAAH,GAAcA,QAAd;AACAlG,SAAG2B,OAAH,GAAaA,OAAb;AACA3B,SAAG0B,MAAH,GAAYA,MAAZ;AACA1B,SAAGS,GAAH,GAASA,GAAT;AACAT,SAAGiG,QAAH,GAAcA,QAAd;AACAjG,SAAGgG,WAAH,GAAiBA,WAAjB;AACD,KAhCD;;AAkCA,QAAI3E,MAAM;AACRnB,YAAM4F,GADE,EACG;AACXO,kBAAYN,MAFJ,CAEW;AAFX,KAAV;;AAKAA,WAAOjG,OAAP,CAAe,UAASC,CAAT,EAAW;AACxB,UAAI,KAAKA,EAAEiG,WAAX,EAAwB;AACtB3E,YAAIzB,IAAJ,GAAWG,EAAEH,IAAb;AACAyB,YAAIG,GAAJ,GAAUzB,EAAEyB,GAAZ;AACAH,YAAI6E,QAAJ,GAAenG,EAAEmG,QAAjB;AACA7E,YAAIM,OAAJ,GAAc5B,EAAE4B,OAAhB;AACAN,YAAIK,MAAJ,GAAa3B,EAAE2B,MAAf;AACAL,YAAI2E,WAAJ,GAAkBjG,EAAEiG,WAApB;AACA3E,YAAIZ,GAAJ,GAAUV,EAAEU,GAAZ;AACAY,YAAI4E,QAAJ,GAAelG,EAAEkG,QAAjB;AACD;AACF,KAXD;;AAaA,WAAO5E,GAAP;AACD,GA5FD;AA6FD;;AAED;AACA,IAAIiF,YAAY,IAAIjI,cAAJ,EAAhB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"risk_controller.js","sourcesContent":["// 依赖jquery，不想依赖就自己把ajax方法用原生代码改写。\n// 依赖moment，不想依赖就自己算小时数。\n// 依赖于risk_rules.js\n// 此处将股票及风控信息准备好，再通过调用risk_rules.js里面的方法进行计算\n// risk_rules.js里面每个方法返回的结构为：\n// obj = {\n//   code: 0,\n//   action: 0,\n//   num: 100,\n//   msg: '',\n//   ruleType: '',\n//   list: [{\n//     code: 0,\n//     action: 0,\n//     num: 100,\n//     msg: '',\n//     ruleType: ''\n//   }]\n// }\n// 为什么会list里面还包含一层同样结构，以单票持仓限制为例，某个股票可能属于多个股票池，a股票池可买数量是100，处理方式是提示，b股票池可买50，处理方式是禁止\n// 此时list内可以保存详细的校验信息，外层则需要将list内的所有数据合并，取满足所有规则的最大数量。\n\n// 定义，风控控制模块\nfunction RiskController(){\n  var rulesData = {};\n  this.getRulesData = function(ids, callback){\n    //各种办法得到风控规则数据\n    $.ajax({\n      // url: '/rms-pub/rule/get_product_risk_brief',\n      url: window.REQUEST_PREFIX + '/oms/helper/risk_rules',\n      type: 'get',\n      data: {\n        product_id: ids\n      },\n      success: function(res){\n        if (res.data) {//因为接口问题，不以code作为判断条件\n          // res.data返回值形如\n          // data: {'11889': {code:0, msg: '', data:{ rules: {target: [], wholePosition: [], onePosition: [], placards: [], controTrade: [], placardsCo: [], controTradeCo: []} } } }\n          rulesData = res.data;\n          if (Object.prototype.toString.call(callback) === '[object Function]') {\n            callback.call();\n          }\n        }else{\n          // 获取失败也不需要提示了，后续检测的时候（仅当rulesInfo还是空对象的时候）会知道的。\n        }\n      },\n      error: function(){\n        // 获取失败也不需要提示了，后续检测的时候（仅当rulesInfo还是空对象的时候）会知道的。\n      }\n    });\n  };\n\n  var stockPoolData;\n  var stockPoolList;\n  this.getStockPoolData = function(callback){\n    $.ajax({\n      url: '/rms-pub/stock_pool/get_list',\n      type: 'get',\n      success: function(res){\n        if (0 == res.code) {\n          // res.data返回值形如\n          // data: {\"code\":0,\"msg\":\"\",\"data\":[{\"id\":\"-1\",\"pool_name\":\"全部股票\",\"pool_type\":\"0\"}]}\n          // stockPoolData从两个接口获取数据，这样就可能存在只从一个接口获取了数据的情况，所以，需要保存并计算\n          stockPoolData = res.data;\n          stockPoolList && Object.keys(stockPoolList).forEach(function(e){\n            stockPoolData.forEach(function(el){\n              if (el.id == e) {\n                el.list = stockPoolList[e];\n              }\n            })\n          });\n          var ids = [];\n          res.data.forEach(function(e){\n            ids.push(e.id);\n          });\n          $.ajax({\n            url: '/rms-pub/stock_pool/get_stock_list',\n            type: 'get',\n            data: {\n              pool_id: ids.join(',')\n            },\n            success: function(res){\n              if (0 == res.code) {\n                stockPoolList = res.data;\n                Object.keys(stockPoolList).forEach(function(e){\n                  stockPoolData.forEach(function(el){\n                    if (el.id == e) {\n                      el.list = stockPoolList[e];\n                    }\n                  })\n                });\n                if (Object.prototype.toString.call(callback) === '[object Function]') {\n                  callback.call();\n                }\n              }else{\n                // 获取失败也不需要提示了，后续检测的时候（仅当stockPoolData还是空对象的时候）会知道的。\n              }\n            },\n            error: function(){\n              // 获取失败也不需要提示了，后续检测的时候（仅当stockPoolData还是空对象的时候）会知道的。\n            }\n          })\n          \n        }else{\n          // 获取失败也不需要提示了，后续检测的时候（仅当stockPoolData还是空对象的时候）会知道的。\n        }\n      },\n      error: function(){\n\n      }\n    })\n  }\n\n  var feeData;\n  this.getFeeData = function(ids, callback){\n    $.ajax({\n      url: window.REQUEST_PREFIX + '/portfolio/multi-fee-list',\n      data: {\n        product_id: ids.join(',')\n      },\n      success: function(res){\n        if (0 == res.code) {\n          feeData = res.data;\n        }else{\n          $.omsAlert(res.msg);\n        }\n        if (Object.prototype.toString.call(callback) === '[object Function]') {\n          callback.call();\n        }\n      },\n      error: function(){\n        $.failNotice();\n      }\n    })\n  };\n  // // 获取满足风控的可用资金\n  // this.getRiskCash = function(stockInfo){\n  //   var rulesInfo = rulesData[stockInfo.product_id];\n\n  this.checkFee = function(stock_code, balance, price, product_id){\n\n    return riskRules.doCheckFee(stock_code, balance, price, feeData[product_id]);\n  }\n\n  this.calFeeTotal = function(stock_code, balance, price, product_id, volume){\n    return riskRules.calFeeTotal(stock_code, balance, price, feeData[product_id], volume);\n  }\n\n  // };\n  // 单股票检测\n  this.checkRules = function(stockInfo){\n    var rtn = {};\n    // 当设置为后端风控时，直接返回\n    if( localStorage.getItem('____be_risk_check____') ){\n        return {\n        code: 0,\n        msg: '后端风控',\n        num: Infinity,\n        dstNum: stockInfo.volume,\n        freeNum: Infinity\n      }\n    }\n\n    // 判断是否得到了风控规则数据\n    if (Object.keys(rulesData).length == 0) {\n      rtn = {\n        code: 20002,\n        msg: '暂无风控规则数据',\n        num: 0\n      }\n      return rtn;\n    }\n\n    // 判断是买入风控还是卖出风控\n    var rules = {};\n    rules.code = rulesData[stockInfo.product_id].code;\n    rules.msg = rulesData[stockInfo.product_id].msg;\n    rules.data = {};\n    rules.data.rules = Object.assign({}, rulesData[stockInfo.product_id].data.rules, rulesData[-1].data.rules);\n\n    if (Number(stockInfo.trade_direction) == 1) {\n      // rtn = this.checkBuyRules(stockInfo, rulesData[stockInfo.product_id]);\n      rtn = this.checkBuyRules(stockInfo, rules);\n    }else if (Number(stockInfo.trade_direction) == 2) {\n      // rtn = this.checkSellRules(stockInfo, rulesData[stockInfo.product_id]);\n      rtn = this.checkSellRules(stockInfo, rules);\n    }else{\n      rtn = {\n        code: 20001,\n        msg: '买入卖出方向异常',\n        num: 0\n      }\n    }\n\n    return rtn;\n  };\n  // 仅进行黑名单检测，查看是否在黑名单内\n  // 拖动条的处理逻辑是：先进行黑名单检测，再降可用资金分配给所有通过检测的数据中。\n  // 入参：product_id产品id；股票code；股票名称 //内置股票池的判断需要用到\n  this.getTargetStatus = function(stockInfo){\n    // 判断是否得到了风控规则数据\n    if (Object.keys(rulesData).length == 0) {\n      return false;\n    }\n\n    var rules = {\n      customPool: stockPoolData,\n      target: rulesData[stockInfo.product_id].data.rules['target']\n    }\n    var rtn = independentTargetCheck.getStatus(stockInfo, rules);\n    return rtn;\n  };\n  // 仅获取向下仓位限制信息\n  this.getPositionInfo = function(stockInfo, rulesInfo){\n    // 判断是否得到了风控规则数据\n    if (Object.keys(rulesData).length == 0) {\n      return false;\n    }\n\n    var rules = {\n      wholePosition: rulesData[stockInfo.product_id].data.rules['wholePosition']\n    }\n    var rtn = independentWholePositionCheck.getPositionInfo(stockInfo, rules);\n    return rtn;\n  };\n  // 仅进行整体仓位控制校验，获取复合风控的最大的可用资金\n  // 入参：total_assets资产总值；net_value净值；product_id产品id\n  this.getMaxCash = function(stockInfo){\n    // 判断是否得到了风控规则数据\n    if (Object.keys(rulesData).length == 0) {\n      return 0;\n    }\n    var rules = {\n      wholePosition: rulesData[stockInfo.product_id].data.rules['wholePosition']\n    }\n    var rtn = independentWholePositionCheck.getMaxCash(stockInfo, rules);\n    return rtn;\n  };\n  // 新增支持告警提示，所以，this.checkWholePosition这样的函数返回值不再是一个obj了，而是一个数组，至少包含禁止规则计算的数量和提示规则计算的数量\n  // 除checkBalance 和 checkCanSellVolume 这两个风控方法可以懒得改成数组，但为了便于理解 与维护，都要改！\n  this.checkBuyRules = function(stockInfo, rulesInfo){\n    var rtn = [];\n    // rtn.push(this.checkBalance(stockInfo, rulesInfo));\n    // rtn.push(this.checkWholePosition(stockInfo, rulesInfo));\n    // rtn.push(this.checkOnePosition(stockInfo, rulesInfo));\n    // rtn.push(this.checkTarget(stockInfo, rulesInfo));\n    // // rtn.push(this.checkTimeArea(stockInfo, rulesInfo)); // 禁止时间段已经不处理了。\n\n    this.checkBalanceIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n    this.checkWholePositionIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n    this.checkOnePositionIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n    this.checkTargetIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，举牌风控\n    this.checkPlacardsIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，对敲风控\n    this.checkControTradeIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，联合风控，举牌风控\n    this.checkPlacardsUnion(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，联合风控，对敲风控\n    this.checkControTradeUnion(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    })\n\n    return this.calcRtn(rtn);\n  };\n  this.checkSellRules = function(stockInfo, rulesInfo){\n    var rtn = [];\n    // rtn.push(this.checkCanSellVolume(stockInfo, rulesInfo));\n\n    this.checkCanSellVolumeIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，对敲风控\n    this.checkControTradeIndependent(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    // 新增，联合风控，对敲风控\n    this.checkControTradeUnion(stockInfo, rulesInfo).forEach(function(e){\n      rtn.push(e);\n    });\n\n    return this.calcRtn(rtn);\n  };\n\n  this.checkBalanceIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var price = Infinity;\n    if (1 == Number(stockInfo.trade_mode)) {\n      price = stockInfo.price;\n    }else if(2 == Number(stockInfo.trade_mode)){\n      price = stockInfo.surged_limit;       // 涨停价 该风控只在买入时判断，所以用涨停价即可\n    }\n\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      product_id: stockInfo.product_id,\n      stock_code: stockInfo.stock_code,     // 股票代码，因为需要判断类型从而算费用而新增\n      balance: stockInfo.enable_cash,       // 可用资金\n      price: price,                         // 价格\n      dstNum: stockInfo.volume              // 数量\n    };\n\n    var rules = {\n      // 无需风控规则\n      feeData: feeData[stockInfo.product_id]\n    };\n\n    var rtnArr = independentBalanceCheck.check(stock, rules);\n\n    // // 价格为0，实际上计算不出最大可买数量，所以freeNum人为设置为0\n    // if (0 == price) {\n    //   rtn.freeNum = 0;\n    // }\n\n    return rtnArr;\n  };\n  this.checkWholePositionIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var price = Infinity;\n    if (1 == Number(stockInfo.trade_mode)) {\n      price = stockInfo.price;\n    }else if(2 == Number(stockInfo.trade_mode)){\n      price = stockInfo.surged_limit;       // 涨停价 该风控只在买入时判断，所以用涨停价即可\n    }\n\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      total_assets: stockInfo.total_assets, // 资产总值\n      stock_code: stockInfo.stock_code,     // 股票代码，因为需要判断类型从而算费用而新增\n      price: price,                         // 价格\n      dstNum: stockInfo.volume,             // 数量\n      security: stockInfo.security,         // 持仓市值\n      net_value: stockInfo.net_value        // 当日净值\n    };\n\n    var rules = {\n      feeData: feeData[stockInfo.product_id], //因为前端风控预扣费用，新增\n      wholePosition: rulesInfo.data.rules['wholePosition']\n    }\n    var rtnArr = independentWholePositionCheck.check(stock, rules);\n\n    // // 价格为0，实际上计算不出最大可买数量，所以freeNum人为设置为0\n    // if (0 == price) {\n    //   rtn.freeNum = 0;\n    // }\n\n    return rtnArr;\n  };\n  this.checkOnePositionIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var price = Infinity;\n    if (1 == Number(stockInfo.trade_mode)) {\n      price = stockInfo.price;\n    }else if(2 == Number(stockInfo.trade_mode)){\n      price = stockInfo.surged_limit;       //涨停价 该风控只在买入时判断，所以用涨停价即可\n    }\n\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      stock_name: stockInfo.stock_name,     // 股票名称\n      stock_code: stockInfo.stock_code,     // 股票id\n      total_assets: stockInfo.total_assets, // 资产总值\n      price: price,                         // 价格\n      dstNum: stockInfo.volume,             // 数量\n      market_value: stockInfo.market_value  // 持仓市值\n    };\n\n    var rules = {\n      customPool: stockPoolData,\n      feeData: feeData[stockInfo.product_id], //因为前端风控预扣费用，新增\n      onePosition: rulesInfo.data.rules['onePosition']\n    }\n    var rtnArr = independentOnePositionCheck.check(stock, rules);\n\n    // // 价格为0，实际上计算不出最大可买数量，所以freeNum人为设置为0\n    // if (0 == price) {\n    //   rtn.freeNum = 0;\n    // }\n\n    return rtnArr;\n  };\n  this.checkTargetIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      dstNum: stockInfo.volume,             // 数量\n      stock_name: stockInfo.stock_name,     // 股票名称\n      stock_code: stockInfo.stock_code      // 股票id\n    };\n    var rules = {\n      customPool: stockPoolData,\n      target: rulesInfo.data.rules['target']\n    };\n    var rtnArr = independentTargetCheck.check(stock, rules);\n    return rtnArr;\n  };\n  this.checkTimeArea = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      dstNum: stockInfo.volume,             // 数量\n      // 需要时间数据\n      time_h: moment().hours()\n    };\n    var rules = {\n      // 暂时后台没有返回时间风控规则，TODO\n    }\n    var rtnArr = timeAreaCheck.check(stock, rules);\n    return rtnArr;\n  };\n  this.checkCanSellVolumeIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var stock = {\n      trading_unit: stockInfo.trading_unit,\n      dstNum: stockInfo.volume,                         // 数量\n      enable_sell_volume: stockInfo.enable_sell_volume  // 能出售数量\n    };\n    var rules = {\n      // 不需要风控规则\n    }\n    var rtnArr = independentCanSellVolumeCheck.check(stock, rules);\n    return rtnArr;\n  };\n  // 新增，独立风控，举牌风控\n  this.checkPlacardsIndependent = function(stockInfo, rulesInfo){\n    // 准备参数，只传需要用到的数据\n    var stock = {\n      // trading_unit: stockInfo.trading_unit,\n      stock_code: stockInfo.stock_code,\n      dstNum: stockInfo.volume,\n      stock_position_num: stockInfo.stock_position_num,\n      stock_entrust_num: stockInfo.stock_entrust_num,\n      stock_total_share: stockInfo.stock_total_share,\n    }\n    var rules = {\n      placards: rulesInfo.data.rules['placards']\n    }\n    var rtnArr = independentPlacardsCheck.check(stock, rules);\n    return rtnArr;\n  }\n  // 新增，独立风控，对敲风控\n  this.checkControTradeIndependent = function(stockInfo, rulesInfo){\n    var stock = {\n      trade_direction: stockInfo.trade_direction,\n      dstNum: stockInfo.volume,\n      stock_entrust_buy_num: stockInfo.stock_entrust_buy_num,\n      stock_entrust_sell_num: stockInfo.stock_entrust_sell_num,\n    }\n    var rules = {\n      controTrade: rulesInfo.data.rules['controTrade']\n    }\n    var rtnArr = independentControTradeCheck.check(stock, rules);\n    return rtnArr;\n  }\n  // 新增，联合风控，举牌风控\n  this.checkPlacardsUnion = function(stockInfo, rulesInfo){\n    var stock = {\n      stock_code: stockInfo.stock_code,\n      dstNum: stockInfo.volume,\n      stock_all_position_num: stockInfo.stock_all_position_num,\n      stock_all_entrust_num: stockInfo.stock_all_entrust_num,\n      stock_total_share: stockInfo.stock_total_share,\n    };\n    var rules = {\n      placardsCo: rulesInfo.data.rules['placardsCo']\n    }\n    var rtnArr = unionPlacardsCheck.check(stock, rules);\n    return rtnArr;\n  }\n  // 新增，联合风控，对敲风控\n  this.checkControTradeUnion = function(stockInfo, rulesInfo){\n    var stock = {\n      trade_direction: stockInfo.trade_direction,\n      dstNum: stockInfo.volume,\n      stock_all_entrust_buy_num: stockInfo.stock_all_entrust_buy_num,\n      stock_all_entrust_sell_num: stockInfo.stock_all_entrust_sell_num\n    };\n    var rules = {\n      controTradeCo: rulesInfo.data.rules['controTradeCo']\n    }\n    var rtnArr = unionControTradeCheck.check(stock, rules);\n    return rtnArr;\n  }\n\n  // 归纳计算各个风控规则的返回值。\n  // dstNum表示的是目标数量。\n  // num表示的是实际可以成交的数量。正常范围是0-dstNum.\n  // freeNum表示的是最大可成交数量。有个问题就是有些风控是告警提示的类型，在计算时会将freeNum设置为较小的值，超过这个值其实也可以。\n  // 所以，应该修改下底层的freeNum计算方式，只取limitAction为1的freeNum的值，再看有没有freeNum比这个值小，有就修改错误码\n  this.calcRtn = function(obj){\n    // var freeNum = Infinity;\n    // var num = Infinity;\n    // var dstNum = '';\n    // var limitAction = '';\n    // var msg = '';\n    // var ruleType = '';\n    // var code = '';\n    // var max_cash = Infinity;\n    // obj.forEach(function(e){\n    //   if (e.num <= num) {\n    //     num = e.num;\n    //     freeNum = e.freeNum; // Math.min(e.freeNum, freeNum);\n    //     max_cash = e.max_cash; // Math.min(e.max_cash, max_cash);\n    //     dstNum = e.dstNum;\n    //     limitAction = e.limitAction;\n    //     msg = e.msg;\n    //     ruleType = e.ruleType;\n    //     code = e.code;\n    //   }\n    // });\n\n    // var rtn = {\n    //   code: code,\n    //   num: num,\n    //   max_cash: max_cash,\n    //   freeNum: freeNum,\n    //   dstNum: dstNum,\n    //   limitAction: limitAction,\n    //   msg: msg,\n    //   ruleType: ruleType,\n    //   list: obj\n    // };\n\n    var tmpArr = [{\n      limitAction: 0\n    }, {\n      limitAction: 1\n    }];\n    tmpArr.forEach(el => {\n      var freeNum = Infinity;\n      var num = Infinity;\n      var dstNum = '';\n      var limitAction = el.limitAction;\n      var msg = '';\n      var ruleType = '';\n      var code = '';\n      var max_cash = Infinity;\n\n      obj.forEach(function(e){\n        // if (e.num <= num && e.limitAction == el.limitAction) {\n        if (e.freeNum <= freeNum && e.limitAction == el.limitAction) {\n          num = e.num;\n          freeNum = Math.min(e.freeNum, freeNum);\n          max_cash = Math.min(e.max_cash, max_cash);\n          dstNum = e.dstNum;\n          limitAction = e.limitAction;\n          msg = e.msg;\n          ruleType = e.ruleType;\n          code = e.code;\n        }\n      });\n\n      el.code = code;\n      el.num = num;\n      el.max_cash = max_cash;\n      el.freeNum = freeNum;\n      el.dstNum = dstNum;\n      el.msg = msg;\n      el.ruleType = ruleType;\n      el.limitAction = limitAction;\n    });\n\n    var rtn = {\n      list: obj, // 透传具体每个风控校验后得到的结果\n      actionList: tmpArr // 不同预警操作的计算后得到的列表\n    }\n\n    tmpArr.forEach(function(e){\n      if (1 == e.limitAction) {\n        rtn.code = e.code;\n        rtn.num = e.num;\n        rtn.max_cash = e.max_cash;\n        rtn.freeNum = e.freeNum;\n        rtn.dstNum = e.dstNum;\n        rtn.limitAction = e.limitAction;\n        rtn.msg = e.msg;\n        rtn.ruleType = e.ruleType;\n      }\n    });\n\n    return rtn;\n  };\n}\n\n// 初始化\nvar riskCheck = new RiskController();\n\n// 需要传入多个id值，用逗号分隔 该方法在原来“/oms/helper/risk_position”调用的地方调用就可以。\n// riskCheck.getRulesData();\n\n// 需要时调用\n// 入参：策略数据\n// var obj = riskCheck.checkRules({\n//   product_id: '',           // 产品id， id\n//   // 交易数据 form_data\n//   trade_direction: '',      // 交易方向，1买入 2卖出 trade_direction\n//   trade_mode: '',           // 1限价／2市价  trade_mode\n//   volume: '',               // 交易数量\n//   price: '',                // 限价金额\n//   surged_limit: '',         // 涨停价 $('.stop_top_price').html()\n//   decline_limit: '',        // 跌停价 $('.stop_down_price').html()\n//   stock_code: '',           // 股票code，包含“.SZ”,比较的时候最好都进行小写转换\n//   stock_name: '',           // 股票名称，用于判断st股票\n//   // 产品的数据 product\n//   total_assets: '',         // 资产总值\n//   enable_cash: '',          // 可用资金 runtime.enable_cash\n//   security: '',             // 持仓市值 runtime.security\n//   net_value: '',            // 当日净值 runtime.net_value\n//   // 持仓数据\n//   market_value: '',         // 本股票持仓市值 //window.position_realtime里面有\n//   total_amount: '',         // 该股票当前持仓数\n//   enable_sell_volume: '',   // 该股票能卖的数量\n//   // 其它\n//   time: ''                  // 交易时间 //不需要传入，内部自己生成\n\n//   联合风控：个股仓位风控\n//   前端不处理。基于以下公理：\n//   1. 前端不应该拿到权限之外的公司数据\n//   2. 前端基于有限的数据可能比后端基于全部数据的风控还要严格。\n\n//   举牌\n//   stock_position_num: 该产品已持仓该股票数量\n//   stock_entrust_num: 该产品已委托该股票数量\n//   stock_total_share 该股票总股票数量，即总股本\n\n//   联合风控：举牌\n//   stock_all_position_num: 所有的持仓汇总该股票数量\n//   stock_all_entrust_num: 所有的委托汇总该股票数量\n\n//   对敲\n//   stock_entrust_buy_num: 该产品已委托买入数量\n//   stock_entrust_sell_num: 该产品已委托卖出数量\n\n//   联合风控：对敲\n//   stock_all_entrust_buy_num: 所有的产品已委托买入数量\n//   stock_all_entrust_sell_num: 所有的产品已委托卖出数量\n// });\n"]}